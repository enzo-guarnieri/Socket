import socket
import os
import struct
import time

# Configurações de rede
TCP_IP = "127.0.0.1"
TCP_PORTA = 1456
BUFFER_SIZE = 1024

# Criação do socket do servidor
servidor = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
servidor.bind((TCP_IP, TCP_PORTA))
servidor.listen(1)

print("Servidor pronto. Aguardando conexão...")
conn, addr = servidor.accept()
print(f"Conectado ao cliente {addr}")


def upld():
    conn.send(b"1")
    file_name_size = struct.unpack("h", conn.recv(2))[0]
    file_name = conn.recv(file_name_size).decode('utf-8')
    conn.send(b"1")
    file_size = struct.unpack("i", conn.recv(4))[0]

    bytes_received = 0
    with open(file_name, "wb") as f:
        while bytes_received < file_size:
            chunk = conn.recv(BUFFER_SIZE)
            if not chunk:
                print("Conexão encerrada antes do término do recebimento.")
                break
            f.write(chunk)
            bytes_received += len(chunk)
    print(f"Arquivo {file_name} recebido com sucesso.")
    conn.send(struct.pack("f", time.time()))


def dwld():
    conn.send(b"1")
    file_name_size = struct.unpack("h", conn.recv(2))[0]
    file_name = conn.recv(file_name_size).decode('utf-8')
    if os.path.isfile(file_name):
        conn.send(struct.pack("i", os.path.getsize(file_name)))
        with open(file_name, "rb") as f:
            while True:
                chunk = f.read(BUFFER_SIZE)
                if not chunk:
                    break
                conn.send(chunk)
        print(f"Arquivo {file_name} enviado com sucesso.")
    else:
        conn.send(struct.pack("i", -1))


def list_files():
    files = os.listdir(os.getcwd())
    conn.send(struct.pack("i", len(files)))
    for file in files:
        conn.send(struct.pack("i", len(file)))
        conn.send(file.encode('utf-8'))
        conn.send(struct.pack("i", os.path.getsize(file)))


def delf():
    conn.send(b"1")
    file_name_size = struct.unpack("h", conn.recv(2))[0]
    file_name = conn.recv(file_name_size).decode('utf-8')
    if os.path.isfile(file_name):
        os.remove(file_name)
        conn.send(struct.pack("i", 1))
        print(f"Arquivo {file_name} deletado com sucesso.")
    else:
        conn.send(struct.pack("i", -1))


while True:
    data = conn.recv(BUFFER_SIZE).decode('utf-8')
    if data == "UPLD":
        upld()
    elif data == "DWLD":
        dwld()
    elif data == "LIST":
        list_files()
    elif data == "DELF":
        delf()
    elif data == "QUIT":
        conn.send(b"1")
        conn.close()
        break
